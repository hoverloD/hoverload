{"pages":[{"title":"About","text":"新年新气象，hoverload换了个新博客。这是本人第三个个人博客。 今年考研，计划好好备考，同时提升开发技能、保证博客质量，也算是劳逸结合了。 本网站使用的美术素材来自かずのこ @kazunoko_zunoco，作画风格甚至尺寸都十分统一，强力推荐！唯一残念的是正方形的图要截掉一半做封面😭","link":"/about/"},{"title":"Links","text":"","link":"/links/"}],"posts":[{"title":"JSON必知必会","text":"前三章 JSON语法第四章 Schema做一致性检验第五章 安全问题第六章 Ajax，API，跨域和JSON-P （下面几张就更浅了）第七章 jQuery，Angular框架第八章 NoSQL第九章 服务端的JSON第十章 JSON作为配置文件 JSON语法JSON语法是JavaScript的真子集，但它是独立于编程语言的一种数据交换格式。 数据交换格式的核心是数据，所以 JSON 中并不会涉及 JavaScript 对象字面量中的函数。JSON 所基于的 JavaScript 对象字面量单纯指对象字面量及其属性的语法表示。这种属性表示方法也就是通过名称 - 值对来实现的。 名称只能用双引号包裹，里面名称甚至可以放单引号。但是 ↓ 命名规范为了获得最大可移植性，应尽可能避免使用空格或特殊字符。 JSON 中的名称 - 值对的名称如果被系统作为对象装入内存的话，将会成为“属性”。在部分系统中，属性名可以包含下划线或数字，但是大多数情况下最好是使用英文字母 AZ 或 az。 ——我选择驼峰 JSON对象有意思所以。。 注意逗号 如果你在名称 - 值对列表的结尾处加上一个逗号，你给机器的指令是“一个新部分的开始”，但是后面什么都没有。 JSON的媒体类型当你在传递数据时，需要提前告知接收方数据是什么类型，这就会涉及媒体类型。媒体类型 也有一些你可能听过的其他称呼，如“互联网媒体类型”“内容类型”或“MIME 类型”。它使用“类型 / 子类型”这种格式来表示，比如你可能见过的 text/html。 JSON 的 MIME 类型是 application/json。 互联网数字分配机构（Internet Assigned Numbers Authority，IANA）维护着一个包含全部媒体类型的列表（http://www.iana.org/assignments/media-types/ media-types.xhtml）。 JSON Schema🔗JSON Schema 规范（中文版） (apifox.cn) JSON Schema （schema意为格式）可以帮助回答下列问题： 值的数据类型是否正确？ 可以具体规定一个值是数字、字符串等类型。 是否包含所需要的数据？ 可以具体规定哪些数据是需要的，哪些是不需要的。 值的形式是不是我需要的？ 可以指定范围、最小值和最大值 一个JSON Schema 文件，它就是JSON格式的。 123456789101112131415161718192021222324{ &quot;$schema&quot;: &quot;http://json-schema.org/draft-04/schema#&quot;, &quot;title&quot;: &quot;Cat&quot;, &quot;properties&quot;: { &quot;name&quot;: { &quot;type&quot;: &quot;string&quot; &quot;minLength&quot;: 3, &quot;maxLength&quot; : 20 }, &quot;age&quot;: { &quot;type&quot;: &quot;number&quot;, &quot;description&quot;: &quot;Your cat's age in years.&quot; &quot;minimum&quot; : 0 }, &quot;declawed&quot;: { &quot;type&quot;: &quot;boolean&quot; } }, &quot;required&quot;: [ &quot;name&quot;, &quot;age&quot;, &quot;declawed&quot; ]} 本章提供的例子只是简介，是冰山一角。JSON Schema 还支持正则表达式（一种字符形式，比如电子邮件地址的格式）以及枚举类型（一个包含所有可能值的列表）。如果你希望深入掌握 JSON Schema，可以访问下面的链接，了解相关规范： JSON Schema 主页（http://json-schema.org/） JSON Schema 验证规范（http://json-schema.org/latest/json-schema-validation. html） 附加一个Linter知识： 是做语法验证的，而schema是检测语义是否合法 JS Linter 进化史 - 知乎 (zhihu.com) JSON安全坦白：看了但并没做攻防实践🥺 跨站请求伪造跨站请求伪造，即 CSRF（cross-site request forgery，读作 sea-surf），是一种 利用站点对用户浏览器信任而发起攻击的方式。CSRF 漏洞已经存在了很长时间，远比 JSON 出现得早。 跨站脚本攻击注入攻击：依赖于将数据注入到 Web 应用程序以方便恶意数据执行或编译的攻击 总结 不要使用顶级数组。顶级数组是合法的 JavaScript 脚本，它们可以用 标签链接并使用。而如果是个对象，就不会被成功解析。 对于不想公开的资源，仅允许使用 HTTP POST 方法请求，而不是 GET方法。GET 方法可以通过 URL 来请求，甚至可以放在 标签中。 使用 JSON.parse() 来代替 eval()。eval() 函数会将传入的字符串编译并执行，这会让你的代码易被攻击。应仅使用 JSON.parse() 来解析 JSON 数据。 零碎（不代表不重要）Web API🔗Web API简介 - 学习 Web 开发 | MDN (mozilla.org) Web API的服务内容和普通网站差不多，但是它并不是用来拿给人看的🐶 Web API 是通过 HTTP 服务进行交互的一组指令和标准。这些交互可以包括创建、读取、更新、删除（CRUD）等操作，且 Web API 都会有一份说明，概述如何使用这些指令和标准。 （是一个对诸如 HTML 或 JSON 文档等资源进行请求和响 应 的 系 统。 这 些 文 档 使 用 URL 经 由 HTTP 请 求。 ） Angular适合MVC的框架，和React、Vue不太一样，提供了更完整的解决方案。 （快让我找个php的MVC方法orz，没想学Angular） NoSQLNoSQL，顾名思义，它不是一种关系型数据库。我们不能使用 SQL 从关联在一起的数据库表格的行和列中获取数据。 NoSQL 数据库的一个例子是键值对存储。键值对存储模型将数据简化为键值对。如果要将英语词典编入数据库，那么用键值对存储非常合适。每一个单词就是一个键，单词对应的定义就是键的值。对于比较简单的数据结构来说，使用这种数据库比使用传统的关系型数据库要合适。（如果想将一个地址的省、市、区、街道和邮政编码等数据相关联，该怎么办？如果需要这种关系，那最好还是使用关系型模型，毕竟将复杂的关系用一个文档来表示还是很有难度的。） 服务端JSONASP、PHP的：序列化，反序列化，请求json 发送JSON HTTP请求的其他方式：Ruby on Rails，Java，Node.js 配置文件软件中经常会有配置文件或设置文件，它让我们可以不必重新编译就能修改设置。配置文件的格式有很多，有 INI 和 XML 等。每种格式都有优点和缺点。 现实中一个使用 JSON 作为配置文件的极佳例子就是 Node.js 默认的 JavaScript 包管理器：npm（文件名称为 package.json。该文件包含了每个包的具体信息，如名称、版本、作者、贡献者、依赖、脚本以及许可）。当然，它也被 AngularJS 和 jQuery 等其他框架使用。","link":"/2022/01/26/JSON%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/"},{"title":"Hello World","text":"基础命令新建文章hexo n(new) XXarticle 默认是post（文章），还有page（页面）、draft（草稿）。 文章属性文章可以拥有如下属性： Setting Description Default layout 文章类型 post、page、draft title 文章的标题 date 创建日期 文件的创建日期 updated 修改日期 文件的修改日期 comments 是否开启评论 true tags 标签 categories 分类 permalink url中的名字 文件名 yaml格式。 123456789101112131415161718192021222324252627282930# 标题和创建时间，自带title: Hello Worlddate: 2022-01-25 15:24:17# 分类categories: c1# 多级分类，注意：这是父子关系，不是同级关系categories:- c1- c2# 同级分类categories:- [python,模块,PIL]- [python,模块,matplotlib]# 单标签tags: tag1# 多标签：tags: - tag1 - tag2# ortags: [tag1,tag2]# 摘要，写了就不会显示全文了# 另一种：&lt;!-- more --&gt;，上面是摘要，下面是正文excerpt: 我是摘要# 文章封面cover: https://gitee.com/hoverload/fig-bed/raw/master/iceCube.jpg 发布123456789101112131415# 新建博客hexo init XXblog# 渲染source里的md文件hexo g(generate)# 本地预览hexo s(server)# 建议部署先先清除缓存，然后g渲染，最后d部署。hexo clean# 部署（遇到git认证问题（10054）：使用git自带的bash or 关掉代理）hexo d(deploy)# 还有，传到github后，有时blog没有立刻变化，，我是 强制刷新+等上一分钟，再看就好了 注：新建、删除或修改文章后，不需要重启hexo server，刷新一下即可预览。 其他新增菜单栏选项 添加新页面：hexo new page “xx” 在主题配置文件的menu中加上该页面 在zh-CN.yml文件中加上中文意思 新增草稿 添加草稿：hexo new draft “xx” 预览草稿：hexo server –draft 发布草稿：hexo publish draft “xx” 自定义404404.html放在主题的source文件夹即可，在本地测不出来（评论模块也是），放到github可以用。 备份前辈建议：分别备份站点配置和文章。站点配置包括blog根目录除了source和public文件夹的所有内容，文章就是source文件夹的全部内容。站点配置不经常变的话可以不用经常备份。 我打算怎么备份。。明天再说~ 官网文档站点配置： 配置 | Hexo 主题配置（大头）： Icarus用户指南 - 主题配置 常见问题 - Icarus Issues · ppoffice/hexo-theme-icarus (github.com) 其他参考： Hexo 入门指南 | Markdown 简单的世界 配置日志待办： 全文都显示在主页上的问题（由摘要解决） 文章带图（由cover解决） RSS 评论模块 使用category，技术和非技术分开 备份站点配置 文章那栏加宽 后期： LaTeX支持 为啥不能F9沉浸阅读 文章悬浮导航 代码高亮换成ayu SEO优化","link":"/2022/01/25/hello-world/"}],"tags":[{"name":"json","slug":"json","link":"/tags/json/"},{"name":"blog","slug":"blog","link":"/tags/blog/"}],"categories":[{"name":"技术","slug":"技术","link":"/categories/%E6%8A%80%E6%9C%AF/"},{"name":"配置","slug":"技术/配置","link":"/categories/%E6%8A%80%E6%9C%AF/%E9%85%8D%E7%BD%AE/"},{"name":"读书笔记","slug":"技术/读书笔记","link":"/categories/%E6%8A%80%E6%9C%AF/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"}]}